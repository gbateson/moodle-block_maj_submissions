{"version":3,"sources":["../src/unicode.js"],"names":["define","UNICODE","character","singlechars","RegExp","strlen","str","match","length","substr","start","r","replace","Math","abs","shorten","txt","txtlength","headlength","taillength","join","singleline","head","tail"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * load object to handle UNICODE strings\n *\n * @module      block_maj_submissions/unicode\n * @category    output\n * @copyright   Gordon Bateson\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since       2.9\n */\ndefine([], function() {\n\n    /** @alias module:block_maj_submissions/unicode */\n    var UNICODE = {};\n\n    // see http://speakingjs.com/es5/ch24.html\n    // \"Matching Any Code Unit and Any Code Point\"\n    UNICODE.character = \"(?:[\\\\0-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF])\";\n    UNICODE.singlechars = new RegExp(UNICODE.character, \"g\");\n\n    UNICODE.strlen = function(str) {\n        if (str===undefined || str===null || str===\"\") {\n            return 0;\n        }\n        return (str.match(UNICODE.singlechars) || []).length;\n    };\n\n    UNICODE.substr = function(str, start, length) {\n\n        if (str == \"\" || length == 0) {\n            return \"\";\n        }\n\n        var strlen = UNICODE.strlen(str);\n\n        if (start > 0 && start > strlen) {\n            return \"\";\n        }\n\n        switch (true) {\n\n            case (start > 0):\n                var r = new RegExp(\"^\" + UNICODE.character + \"{\" + start + \"}(.*)$\");\n                str = str.replace(r, \"$1\");\n                strlen -= start; // subtract\n                break;\n\n            case (start < 0 && Math.abs(start) < strlen):\n                var r = new RegExp(\"^(.*)\" + UNICODE.character + \"{\" + Math.abs(start) + \"}$\");\n                str = str.replace(r, \"$1\");\n                strlen += start; // subtract\n                break;\n        }\n\n        if (length < 0 && Math.abs(length) > strlen) {\n            return \"\";\n        }\n\n        switch (true) {\n\n            case (length > 0 && length < strlen):\n                var r = new RegExp(\"^(\" + UNICODE.character + \"{\" + length + \"}).*$\");\n                str = str.replace(r, \"$1\");\n                strlen = length;\n                break;\n\n            case (length < 0):\n                var r = new RegExp(\"^(.*)\" + UNICODE.character + \"{\" + Math.abs(length) + \"}$\");\n                str = str.replace(r, \"$1\");\n                strlen = length;\n                break;\n        }\n\n        return str;\n    };\n\n    /**\n     * shorten\n     *\n     * @param   string   txt\n     * @param   integer  txtlength (optional, default=28)\n     * @param   integer  headlength (optional, default=10)\n     * @param   integer  taillength (optional, default=10)\n     * @param   boolean  singleline (optional, default=false)\n     * @return  string\n     */\n    UNICODE.shorten = function(txt, txtlength, headlength, taillength, join, singleline) {\n        if (txtlength===undefined || txtlength===null) {\n            txtlength = 28;\n        }\n        if (headlength===undefined || headlength===null) {\n            headlength = 14;\n        }\n        if (taillength===undefined || taillength===null) {\n            taillength = 10;\n        }\n        if (join===undefined || join===null) {\n            join = ' ... ';\n        }\n        if (singleline) {\n            var r = new RegExp(\"( |\\\\t|\\\\r|\\\\n|(<br\\\\b[^>]*>))+\", \"g\");\n            txt = txt.replace(r, ' ');\n        }\n        if (txtlength && (headlength || taillength)) {\n            var strlen = UNICODE.strlen(txt);\n            if (strlen > txtlength) {\n                var head = UNICODE.substr(txt, 0, headlength);\n                var tail = UNICODE.substr(txt, strlen - taillength, taillength);\n                txt = (head + join + tail);\n            }\n        }\n        return txt;\n    };\n\n    return UNICODE;\n});\n"],"file":"unicode.min.js"}